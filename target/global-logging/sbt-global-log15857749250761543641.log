[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.2 (Amazon.com Inc. Java 17.0.12)
[debug] Load.defaultLoad until apply took 1136.857141ms
[debug]                 Load.loadUnit: plugins took 1243.519039ms
[debug]                 Load.loadUnit: defsScala took 1.092107ms
[debug] [Loading] Scanning directory /home/aldaron/Documents/Cours/project/project
[debug]                   Load.loadUnit: mkEval took 103.040279ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/aldaron/Documents/Cours/project/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 240.508752 ms
[info] loading settings for project cours-build-build from metals.sbt ...
[debug]                     Load.resolveProject(cours-build-build) took 1076.685312ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id cours-build-build, base: /home/aldaron/Documents/Cours/project/project, plugins: List(<none>))) took 1504.118359ms
[debug] [Loading] Done in /home/aldaron/Documents/Cours/project/project, returning: (cours-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 6417.011654ms
[debug]                 Load.loadUnit: cleanEvalClasses took 175.414649ms
[debug]               Load.loadUnit(file:/home/aldaron/Documents/Cours/project/project/, ...) took 8072.190876ms
[debug]             Load.apply: load took 10114.587996ms
[debug]             Load.apply: resolveProjects took 71.414241ms
[debug]             Load.apply: finalTransforms took 920.512227ms
[debug]             Load.apply: config.delegates took 130.077572ms
[debug]             Load.apply: Def.make(settings)... took 6753.721695ms
[debug]             Load.apply: structureIndex took 2743.156539ms
[debug]             Load.apply: mkStreams took 9.701875ms
[info] loading project definition from /home/aldaron/Documents/Cours/project/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
