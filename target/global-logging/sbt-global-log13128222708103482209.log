[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.2 (Amazon.com Inc. Java 17.0.12)
[debug] Load.defaultLoad until apply took 494.904301ms
[debug]                 Load.loadUnit: plugins took 251.115034ms
[debug]                 Load.loadUnit: defsScala took 0.723388ms
[debug] [Loading] Scanning directory /home/aldaron/Documents/Cours/project/project
[debug]                   Load.loadUnit: mkEval took 23.362547ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/aldaron/Documents/Cours/project/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 56.596318 ms
[info] loading settings for project cours-build-build from metals.sbt ...
[debug]                     Load.resolveProject(cours-build-build) took 522.058649ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id cours-build-build, base: /home/aldaron/Documents/Cours/project/project, plugins: List(<none>))) took 610.746039ms
[debug] [Loading] Done in /home/aldaron/Documents/Cours/project/project, returning: (cours-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 12752.300848ms
[debug]                 Load.loadUnit: cleanEvalClasses took 342.073779ms
[debug]               Load.loadUnit(file:/home/aldaron/Documents/Cours/project/project/, ...) took 13377.696964ms
[debug]             Load.apply: load took 14272.289494ms
[debug]             Load.apply: resolveProjects took 32.675342ms
[debug]             Load.apply: finalTransforms took 547.575304ms
[debug]             Load.apply: config.delegates took 63.416952ms
[debug]             Load.apply: Def.make(settings)... took 2007.679425ms
[debug]             Load.apply: structureIndex took 453.378796ms
[debug]             Load.apply: mkStreams took 2.438057ms
[info] loading project definition from /home/aldaron/Documents/Cours/project/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 23389.600733ms
[debug]           Load.loadUnit: defsScala took 0.008532ms
[debug] [Loading] Scanning directory /home/aldaron/Documents/Cours/project
[debug]             Load.loadUnit: mkEval took 6.785398ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/aldaron/Documents/Cours/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(metals.MetalsPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(org.scaladebugger.SbtJdiTools),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(metals.MetalsPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.scaladebugger.SbtJdiTools))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,org.scaladebugger.SbtJdiTools,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin,metals.MetalsPlugin)
[debug] Plugins.deducer#function took 5.810554 ms
[info] loading settings for project cours-build from metals.sbt ...
[debug]               Load.resolveProject(cours-build) took 10.175023ms
[debug]             Load.loadTransitive: finalizeProject(Project(id cours-build, base: /home/aldaron/Documents/Cours/project, plugins: List(<none>))) took 17.244996ms
[debug] [Loading] Done in /home/aldaron/Documents/Cours/project, returning: (cours-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2666.417816ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.00317ms
[debug]         Load.loadUnit(file:/home/aldaron/Documents/Cours/project/, ...) took 26060.464441ms
[debug]       Load.apply: load took 26070.842496ms
[debug]       Load.apply: resolveProjects took 0.291211ms
[debug]       Load.apply: finalTransforms took 30.347487ms
[debug]       Load.apply: config.delegates took 0.895258ms
[debug]       Load.apply: Def.make(settings)... took 364.283399ms
[debug]       Load.apply: structureIndex took 152.473122ms
[debug]       Load.apply: mkStreams took 0.004168ms
[info] loading project definition from /home/aldaron/Documents/Cours/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 48372.933742ms
[debug]     Load.loadUnit: defsScala took 0.00446ms
[debug] [Loading] Scanning directory /home/aldaron/Documents/Cours
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/aldaron/Documents/Cours, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(metals.MetalsPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(ch.epfl.scala.debugadapter.sbtplugin.DebugAdapterPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(metals.MetalsPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(ch.epfl.scala.debugadapter.sbtplugin.DebugAdapterPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,ch.epfl.scala.debugadapter.sbtplugin.DebugAdapterPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin,metals.MetalsPlugin)
[debug] Plugins.deducer#function took 2.547489 ms
[debug]         Load.resolveProject(cours) took 21.306539ms
[debug]       Load.loadTransitive: finalizeProject(Project(id cours, base: /home/aldaron/Documents/Cours, plugins: List(<none>))) took 24.51253ms
[debug] [Loading] Done in /home/aldaron/Documents/Cours, returning: (cours)
[debug]     Load.loadUnit: loadedProjectsRaw took 25.790406ms
[debug]     Load.loadUnit: cleanEvalClasses took 0.015114ms
[debug]   Load.loadUnit(file:/home/aldaron/Documents/Cours/, ...) took 48401.538101ms
[debug] Load.apply: load took 48472.151566ms
[debug] Load.apply: resolveProjects took 0.223647ms
[debug] Load.apply: finalTransforms took 12.687863ms
[debug] Load.apply: config.delegates took 0.490027ms
[debug] Load.apply: Def.make(settings)... took 253.428915ms
[debug] Load.apply: structureIndex took 40.921634ms
[debug] Load.apply: mkStreams took 0.00248ms
[info] set current project to cours (in build file:/home/aldaron/Documents/Cours/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///home/aldaron/.sbt/1.0/server/ed597b03deb8a4f5bb93/sock
[debug] Writing bsp connection file
[info] started sbt server
[warn] Metals requires the semanticdb compiler plugin
[warn] consider setting 'Global / semanticdbEnabled := true' in your global sbt settings ($HOME/.sbt/1.0)
